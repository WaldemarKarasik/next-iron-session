{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport { HYDRATE, createWrapper } from \"next-redux-wrapper\";\nimport thunkMiddleware from \"redux-thunk\"; // import count from \"./count/reducer\";\n// import tick from \"./tick/reducer\";\n\nimport products from \"./products/reducer\"; // import productDetails from \"./productDetails/reducer\";\n\nimport cart from \"./cart/reducer\";\nimport Cookie from \"js-cookie\";\n\nvar bindMiddleware = function bindMiddleware(middleware) {\n  if (true) {\n    var _require = require(\"redux-devtools-extension\"),\n        composeWithDevTools = _require.composeWithDevTools;\n\n    return composeWithDevTools(applyMiddleware.apply(void 0, _toConsumableArray(middleware)));\n  }\n\n  return applyMiddleware.apply(void 0, _toConsumableArray(middleware));\n};\n\nvar combinedReducer = combineReducers({\n  products: products,\n  cart: cart\n});\n\nvar reducer = function reducer(state, action) {\n  if (action.type === HYDRATE) {\n    var nextState = _objectSpread(_objectSpread({}, state), action.payload);\n\n    if (state.count) nextState.count = state.count; // preserve count value on client side navigation\n\n    if (state.products.products.length) nextState.products = state.products;\n    if (state.cart.cartItems.length) nextState.cart.cartItems = state.cart.cartItems;\n    return nextState;\n  } else {\n    return combinedReducer(state, action);\n  }\n};\n\nvar cartItems = Cookie.getJSON(\"cartItems\") || []; // const initialState = { cart: { cartItems } };\n\nvar initStore = function initStore() {\n  return createStore(reducer, bindMiddleware([thunkMiddleware]));\n};\n\nexport var wrapper = createWrapper(initStore);","map":{"version":3,"sources":["C:/Users/daniel/Documents/react/next-iron-session/store/store.ts"],"names":["createStore","applyMiddleware","combineReducers","HYDRATE","createWrapper","thunkMiddleware","products","cart","Cookie","bindMiddleware","middleware","require","composeWithDevTools","combinedReducer","reducer","state","action","type","nextState","payload","count","length","cartItems","getJSON","initStore","wrapper"],"mappings":";;;;;;;AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,SAASC,OAAT,EAAkBC,aAAlB,QAAuC,oBAAvC;AACA,OAAOC,eAAP,MAA4B,aAA5B,C,CACA;AACA;;AACA,OAAOC,QAAP,MAAqB,oBAArB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AAEA,OAAOC,MAAP,MAAmB,WAAnB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,UAAD,EAAgB;AACrC,YAA2C;AAAA,mBACTC,OAAO,CAAC,0BAAD,CADE;AAAA,QACjCC,mBADiC,YACjCA,mBADiC;;AAEzC,WAAOA,mBAAmB,CAACX,eAAe,MAAf,4BAAmBS,UAAnB,EAAD,CAA1B;AACD;;AACD,SAAOT,eAAe,MAAf,4BAAmBS,UAAnB,EAAP;AACD,CAND;;AAQA,IAAMG,eAAe,GAAGX,eAAe,CAAC;AACtCI,EAAAA,QAAQ,EAARA,QADsC;AAEtCC,EAAAA,IAAI,EAAJA;AAFsC,CAAD,CAAvC;;AAKA,IAAMO,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACjC,MAAIA,MAAM,CAACC,IAAP,KAAgBd,OAApB,EAA6B;AAC3B,QAAMe,SAAS,mCACVH,KADU,GAEVC,MAAM,CAACG,OAFG,CAAf;;AAIA,QAAIJ,KAAK,CAACK,KAAV,EAAiBF,SAAS,CAACE,KAAV,GAAkBL,KAAK,CAACK,KAAxB,CALU,CAKqB;;AAChD,QAAIL,KAAK,CAACT,QAAN,CAAeA,QAAf,CAAwBe,MAA5B,EAAoCH,SAAS,CAACZ,QAAV,GAAqBS,KAAK,CAACT,QAA3B;AAEpC,QAAIS,KAAK,CAACR,IAAN,CAAWe,SAAX,CAAqBD,MAAzB,EACEH,SAAS,CAACX,IAAV,CAAee,SAAf,GAA2BP,KAAK,CAACR,IAAN,CAAWe,SAAtC;AACF,WAAOJ,SAAP;AACD,GAXD,MAWO;AACL,WAAOL,eAAe,CAACE,KAAD,EAAQC,MAAR,CAAtB;AACD;AACF,CAfD;;AAiBA,IAAMM,SAAS,GAAGd,MAAM,CAACe,OAAP,CAAe,WAAf,KAA+B,EAAjD,C,CACA;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,SAAOxB,WAAW,CAACc,OAAD,EAAUL,cAAc,CAAC,CAACJ,eAAD,CAAD,CAAxB,CAAlB;AACD,CAFD;;AAIA,OAAO,IAAMoB,OAAO,GAAGrB,aAAa,CAACoB,SAAD,CAA7B","sourcesContent":["import { createStore, applyMiddleware, combineReducers } from \"redux\";\r\nimport { HYDRATE, createWrapper } from \"next-redux-wrapper\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\n// import count from \"./count/reducer\";\r\n// import tick from \"./tick/reducer\";\r\nimport products from \"./products/reducer\";\r\n// import productDetails from \"./productDetails/reducer\";\r\nimport cart from \"./cart/reducer\";\r\nimport { some, isEmpty } from \"lodash\";\r\nimport Cookie from \"js-cookie\";\r\n\r\nconst bindMiddleware = (middleware) => {\r\n  if (process.env.NODE_ENV !== \"production\") {\r\n    const { composeWithDevTools } = require(\"redux-devtools-extension\");\r\n    return composeWithDevTools(applyMiddleware(...middleware));\r\n  }\r\n  return applyMiddleware(...middleware);\r\n};\r\n\r\nconst combinedReducer = combineReducers({\r\n  products,\r\n  cart,\r\n});\r\n\r\nconst reducer = (state, action) => {\r\n  if (action.type === HYDRATE) {\r\n    const nextState = {\r\n      ...state, // use previous state\r\n      ...action.payload, // apply delta from hydration\r\n    };\r\n    if (state.count) nextState.count = state.count; // preserve count value on client side navigation\r\n    if (state.products.products.length) nextState.products = state.products;\r\n\r\n    if (state.cart.cartItems.length)\r\n      nextState.cart.cartItems = state.cart.cartItems;\r\n    return nextState;\r\n  } else {\r\n    return combinedReducer(state, action);\r\n  }\r\n};\r\n\r\nconst cartItems = Cookie.getJSON(\"cartItems\") || [];\r\n// const initialState = { cart: { cartItems } };\r\n\r\nconst initStore = () => {\r\n  return createStore(reducer, bindMiddleware([thunkMiddleware]));\r\n};\r\n\r\nexport const wrapper = createWrapper(initStore);\r\n"]},"metadata":{},"sourceType":"module"}