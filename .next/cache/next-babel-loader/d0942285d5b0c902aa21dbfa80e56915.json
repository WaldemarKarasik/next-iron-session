{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst cartInitialState = {\n  cartItems: []\n};\nexport default function reducer(state = cartInitialState, action) {\n  switch (action.type) {\n    case \"CLIENT_ADD_TO_CART\":\n      const item = action.payload;\n      const product = state.cartItems.find(x => x.product == item.product);\n\n      if (product) {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          cartItems: state.cartItems.map(x => x.product == product.product ? item : x)\n        });\n      } else {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          cartItems: [...state.cartItems, item]\n        });\n      }\n\n    case \"CLIENT_REMOVE_FROM_CART\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        cartItems: state.cartItems.filter(item => item.product !== action.payload)\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/daniel/Documents/react/next-iron-session/store/cart/reducer.ts"],"names":["cartInitialState","cartItems","reducer","state","action","type","item","payload","product","find","x","map","filter"],"mappings":";;;;;;AAAA,MAAMA,gBAAgB,GAAG;AACvBC,EAAAA,SAAS,EAAE;AADY,CAAzB;AAIA,eAAe,SAASC,OAAT,CAAiBC,KAAK,GAAGH,gBAAzB,EAA2CI,MAA3C,EAAmD;AAChE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,oBAAL;AACE,YAAMC,IAAI,GAAGF,MAAM,CAACG,OAApB;AACA,YAAMC,OAAO,GAAGL,KAAK,CAACF,SAAN,CAAgBQ,IAAhB,CAAsBC,CAAD,IAAOA,CAAC,CAACF,OAAF,IAAaF,IAAI,CAACE,OAA9C,CAAhB;;AAEA,UAAIA,OAAJ,EAAa;AACX,+CACKL,KADL;AAEEF,UAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,CAAgBU,GAAhB,CAAqBD,CAAD,IAC7BA,CAAC,CAACF,OAAF,IAAaA,OAAO,CAACA,OAArB,GAA+BF,IAA/B,GAAsCI,CAD7B;AAFb;AAMD,OAPD,MAOO;AACL,+CAAYP,KAAZ;AAAmBF,UAAAA,SAAS,EAAE,CAAC,GAAGE,KAAK,CAACF,SAAV,EAAqBK,IAArB;AAA9B;AACD;;AACH,SAAK,yBAAL;AACE,6CACKH,KADL;AAEEF,QAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,CAAgBW,MAAhB,CACRN,IAAD,IAAUA,IAAI,CAACE,OAAL,KAAiBJ,MAAM,CAACG,OADzB;AAFb;;AAMF;AACE,aAAOJ,KAAP;AAvBJ;AAyBD","sourcesContent":["const cartInitialState = {\r\n  cartItems: [],\r\n};\r\n\r\nexport default function reducer(state = cartInitialState, action) {\r\n  switch (action.type) {\r\n    case \"CLIENT_ADD_TO_CART\":\r\n      const item = action.payload;\r\n      const product = state.cartItems.find((x) => x.product == item.product);\r\n\r\n      if (product) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map((x) =>\r\n            x.product == product.product ? item : x\r\n          ),\r\n        };\r\n      } else {\r\n        return { ...state, cartItems: [...state.cartItems, item] };\r\n      }\r\n    case \"CLIENT_REMOVE_FROM_CART\":\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter(\r\n          (item) => item.product !== action.payload\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}