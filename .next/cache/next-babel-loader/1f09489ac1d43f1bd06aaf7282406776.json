{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport Router from \"next/router\";\nimport useSWR from \"swr\";\nexport default function useUser() {\n  _s();\n\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$redirectTo = _ref.redirectTo,\n      redirectTo = _ref$redirectTo === void 0 ? false : _ref$redirectTo,\n      _ref$redirectIfFound = _ref.redirectIfFound,\n      redirectIfFound = _ref$redirectIfFound === void 0 ? false : _ref$redirectIfFound;\n\n  var _useSWR = useSWR(\"/api/user\"),\n      user = _useSWR.data,\n      mutateUser = _useSWR.mutate;\n\n  useEffect(function () {\n    // if no redirect needed, just return (example: already on /dashboard)\n    // if user data not yet there (fetch in progress, logged in or not) then don't do anything yet\n    if (!redirectTo || !user) return;\n\n    if ( // If redirectTo is set, redirect if the user was not found.\n    redirectTo && !redirectIfFound && !(user === null || user === void 0 ? void 0 : user.isLoggedIn) || // If redirectIfFound is also set, redirect if the user was found\n    redirectIfFound && (user === null || user === void 0 ? void 0 : user.isLoggedIn)) {\n      Router.push(redirectTo);\n    }\n  }, [user, redirectIfFound, redirectTo]);\n  return {\n    user: user,\n    mutateUser: mutateUser\n  };\n}\n\n_s(useUser, \"UBNtihGiG1H7CNIeLmjUCxBowBw=\", false, function () {\n  return [useSWR];\n});","map":{"version":3,"sources":["C:/Users/daniel/Documents/react/next-iron-session/lib/useUser.js"],"names":["useEffect","Router","useSWR","useUser","redirectTo","redirectIfFound","user","data","mutateUser","mutate","isLoggedIn","push"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,MAAP,MAAmB,KAAnB;AAEA,eAAe,SAASC,OAAT,GAGP;AAAA;;AAAA,iFAAJ,EAAI;AAAA,6BAFNC,UAEM;AAAA,MAFNA,UAEM,gCAFO,KAEP;AAAA,kCADNC,eACM;AAAA,MADNA,eACM,qCADY,KACZ;;AAAA,gBACqCH,MAAM,CAAC,WAAD,CAD3C;AAAA,MACQI,IADR,WACEC,IADF;AAAA,MACsBC,UADtB,WACcC,MADd;;AAGNT,EAAAA,SAAS,CAAC,YAAM;AACd;AACA;AACA,QAAI,CAACI,UAAD,IAAe,CAACE,IAApB,EAA0B;;AAE1B,SACE;AACCF,IAAAA,UAAU,IAAI,CAACC,eAAf,IAAkC,EAACC,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEI,UAAP,CAAnC,IACA;AACCL,IAAAA,eAAe,KAAIC,IAAJ,aAAIA,IAAJ,uBAAIA,IAAI,CAAEI,UAAV,CAJlB,EAKE;AACAT,MAAAA,MAAM,CAACU,IAAP,CAAYP,UAAZ;AACD;AACF,GAbQ,EAaN,CAACE,IAAD,EAAOD,eAAP,EAAwBD,UAAxB,CAbM,CAAT;AAeA,SAAO;AAAEE,IAAAA,IAAI,EAAJA,IAAF;AAAQE,IAAAA,UAAU,EAAVA;AAAR,GAAP;AACD;;GAtBuBL,O;UAIqBD,M","sourcesContent":["import { useEffect } from \"react\";\r\nimport Router from \"next/router\";\r\nimport useSWR from \"swr\";\r\n\r\nexport default function useUser({\r\n  redirectTo = false,\r\n  redirectIfFound = false,\r\n} = {}) {\r\n  const { data: user, mutate: mutateUser } = useSWR(\"/api/user\");\r\n\r\n  useEffect(() => {\r\n    // if no redirect needed, just return (example: already on /dashboard)\r\n    // if user data not yet there (fetch in progress, logged in or not) then don't do anything yet\r\n    if (!redirectTo || !user) return;\r\n\r\n    if (\r\n      // If redirectTo is set, redirect if the user was not found.\r\n      (redirectTo && !redirectIfFound && !user?.isLoggedIn) ||\r\n      // If redirectIfFound is also set, redirect if the user was found\r\n      (redirectIfFound && user?.isLoggedIn)\r\n    ) {\r\n      Router.push(redirectTo);\r\n    }\r\n  }, [user, redirectIfFound, redirectTo]);\r\n\r\n  return { user, mutateUser };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}