{"ast":null,"code":"import withSession from \"../../lib/session\";\nimport fetchJson from \"../../lib/fetchJson\";\nexport default withSession(async (req, res) => {\n  const user = req.session.get(\"user\");\n\n  if (!(user === null || user === void 0 ? void 0 : user.isLoggedIn)) {\n    res.status(401).end();\n    return;\n  }\n\n  const url = `https://api.github.com/users/${user.login}/events`;\n\n  try {\n    // we check that the user exists on GitHub and store some data in session\n    const events = await fetchJson(url);\n    res.json(events);\n  } catch (error) {\n    const {\n      response: fetchResponse\n    } = error;\n    res.status((fetchResponse === null || fetchResponse === void 0 ? void 0 : fetchResponse.status) || 500).json(error.data);\n  }\n});","map":{"version":3,"sources":["C:/Users/daniel/Documents/react/next-iron-session/pages/api/events.js"],"names":["withSession","fetchJson","req","res","user","session","get","isLoggedIn","status","end","url","login","events","json","error","response","fetchResponse","data"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,mBAAxB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AAEA,eAAeD,WAAW,CAAC,OAAOE,GAAP,EAAYC,GAAZ,KAAoB;AAC7C,QAAMC,IAAI,GAAGF,GAAG,CAACG,OAAJ,CAAYC,GAAZ,CAAgB,MAAhB,CAAb;;AAEA,MAAI,EAACF,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEG,UAAP,CAAJ,EAAuB;AACrBJ,IAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,GAAhB;AACA;AACD;;AAED,QAAMC,GAAG,GAAI,gCAA+BN,IAAI,CAACO,KAAM,SAAvD;;AAEA,MAAI;AACF;AACA,UAAMC,MAAM,GAAG,MAAMX,SAAS,CAACS,GAAD,CAA9B;AACAP,IAAAA,GAAG,CAACU,IAAJ,CAASD,MAAT;AACD,GAJD,CAIE,OAAOE,KAAP,EAAc;AACd,UAAM;AAAEC,MAAAA,QAAQ,EAAEC;AAAZ,QAA8BF,KAApC;AACAX,IAAAA,GAAG,CAACK,MAAJ,CAAW,CAAAQ,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAER,MAAf,KAAyB,GAApC,EAAyCK,IAAzC,CAA8CC,KAAK,CAACG,IAApD;AACD;AACF,CAlByB,CAA1B","sourcesContent":["import withSession from \"../../lib/session\";\r\nimport fetchJson from \"../../lib/fetchJson\";\r\n\r\nexport default withSession(async (req, res) => {\r\n  const user = req.session.get(\"user\");\r\n\r\n  if (!user?.isLoggedIn) {\r\n    res.status(401).end();\r\n    return;\r\n  }\r\n\r\n  const url = `https://api.github.com/users/${user.login}/events`;\r\n\r\n  try {\r\n    // we check that the user exists on GitHub and store some data in session\r\n    const events = await fetchJson(url);\r\n    res.json(events);\r\n  } catch (error) {\r\n    const { response: fetchResponse } = error;\r\n    res.status(fetchResponse?.status || 500).json(error.data);\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}