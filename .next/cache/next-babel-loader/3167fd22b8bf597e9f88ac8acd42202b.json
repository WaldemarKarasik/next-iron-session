{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport { HYDRATE, createWrapper } from \"next-redux-wrapper\";\nimport thunkMiddleware from \"redux-thunk\"; // import count from \"./count/reducer\";\n// import tick from \"./tick/reducer\";\n\nimport products from \"./products/reducer\"; // import productDetails from \"./productDetails/reducer\";\n// import cart from \"./cart/reducer\";\n\nimport Cookie from \"js-cookie\";\n\nconst bindMiddleware = middleware => {\n  if (true) {\n    const {\n      composeWithDevTools\n    } = require(\"redux-devtools-extension\");\n\n    return composeWithDevTools(applyMiddleware(...middleware));\n  }\n\n  return applyMiddleware(...middleware);\n};\n\nconst combinedReducer = combineReducers({\n  products\n});\n\nconst reducer = (state, action) => {\n  if (action.type === HYDRATE) {\n    const nextState = _objectSpread(_objectSpread({}, state), action.payload);\n\n    if (state.count) nextState.count = state.count; // preserve count value on client side navigation\n\n    if (state.products.products.length) nextState.products = state.products;\n    if (state.cart.cartItems.length) nextState.cart.cartItems = state.cart.cartItems;\n    return nextState;\n  } else {\n    return combinedReducer(state, action);\n  }\n};\n\nconst cartItems = Cookie.getJSON(\"cartItems\") || []; // const initialState = { cart: { cartItems } };\n\nconst initStore = () => {\n  return createStore(reducer, bindMiddleware([thunkMiddleware]));\n};\n\nexport const wrapper = createWrapper(initStore);","map":{"version":3,"sources":["C:/Users/daniel/Documents/react/next-iron-session/store/store.ts"],"names":["createStore","applyMiddleware","combineReducers","HYDRATE","createWrapper","thunkMiddleware","products","Cookie","bindMiddleware","middleware","composeWithDevTools","require","combinedReducer","reducer","state","action","type","nextState","payload","count","length","cart","cartItems","getJSON","initStore","wrapper"],"mappings":";;;;;;AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,SAASC,OAAT,EAAkBC,aAAlB,QAAuC,oBAAvC;AACA,OAAOC,eAAP,MAA4B,aAA5B,C,CACA;AACA;;AACA,OAAOC,QAAP,MAAqB,oBAArB,C,CACA;AACA;;AAEA,OAAOC,MAAP,MAAmB,WAAnB;;AAEA,MAAMC,cAAc,GAAIC,UAAD,IAAgB;AACrC,YAA2C;AACzC,UAAM;AAAEC,MAAAA;AAAF,QAA0BC,OAAO,CAAC,0BAAD,CAAvC;;AACA,WAAOD,mBAAmB,CAACT,eAAe,CAAC,GAAGQ,UAAJ,CAAhB,CAA1B;AACD;;AACD,SAAOR,eAAe,CAAC,GAAGQ,UAAJ,CAAtB;AACD,CAND;;AAQA,MAAMG,eAAe,GAAGV,eAAe,CAAC;AACtCI,EAAAA;AADsC,CAAD,CAAvC;;AAIA,MAAMO,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,MAAIA,MAAM,CAACC,IAAP,KAAgBb,OAApB,EAA6B;AAC3B,UAAMc,SAAS,mCACVH,KADU,GAEVC,MAAM,CAACG,OAFG,CAAf;;AAIA,QAAIJ,KAAK,CAACK,KAAV,EAAiBF,SAAS,CAACE,KAAV,GAAkBL,KAAK,CAACK,KAAxB,CALU,CAKqB;;AAChD,QAAIL,KAAK,CAACR,QAAN,CAAeA,QAAf,CAAwBc,MAA5B,EAAoCH,SAAS,CAACX,QAAV,GAAqBQ,KAAK,CAACR,QAA3B;AAEpC,QAAIQ,KAAK,CAACO,IAAN,CAAWC,SAAX,CAAqBF,MAAzB,EACEH,SAAS,CAACI,IAAV,CAAeC,SAAf,GAA2BR,KAAK,CAACO,IAAN,CAAWC,SAAtC;AACF,WAAOL,SAAP;AACD,GAXD,MAWO;AACL,WAAOL,eAAe,CAACE,KAAD,EAAQC,MAAR,CAAtB;AACD;AACF,CAfD;;AAiBA,MAAMO,SAAS,GAAGf,MAAM,CAACgB,OAAP,CAAe,WAAf,KAA+B,EAAjD,C,CACA;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB,SAAOxB,WAAW,CAACa,OAAD,EAAUL,cAAc,CAAC,CAACH,eAAD,CAAD,CAAxB,CAAlB;AACD,CAFD;;AAIA,OAAO,MAAMoB,OAAO,GAAGrB,aAAa,CAACoB,SAAD,CAA7B","sourcesContent":["import { createStore, applyMiddleware, combineReducers } from \"redux\";\r\nimport { HYDRATE, createWrapper } from \"next-redux-wrapper\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\n// import count from \"./count/reducer\";\r\n// import tick from \"./tick/reducer\";\r\nimport products from \"./products/reducer\";\r\n// import productDetails from \"./productDetails/reducer\";\r\n// import cart from \"./cart/reducer\";\r\nimport { some, isEmpty } from \"lodash\";\r\nimport Cookie from \"js-cookie\";\r\n\r\nconst bindMiddleware = (middleware) => {\r\n  if (process.env.NODE_ENV !== \"production\") {\r\n    const { composeWithDevTools } = require(\"redux-devtools-extension\");\r\n    return composeWithDevTools(applyMiddleware(...middleware));\r\n  }\r\n  return applyMiddleware(...middleware);\r\n};\r\n\r\nconst combinedReducer = combineReducers({\r\n  products,\r\n});\r\n\r\nconst reducer = (state, action) => {\r\n  if (action.type === HYDRATE) {\r\n    const nextState = {\r\n      ...state, // use previous state\r\n      ...action.payload, // apply delta from hydration\r\n    };\r\n    if (state.count) nextState.count = state.count; // preserve count value on client side navigation\r\n    if (state.products.products.length) nextState.products = state.products;\r\n\r\n    if (state.cart.cartItems.length)\r\n      nextState.cart.cartItems = state.cart.cartItems;\r\n    return nextState;\r\n  } else {\r\n    return combinedReducer(state, action);\r\n  }\r\n};\r\n\r\nconst cartItems = Cookie.getJSON(\"cartItems\") || [];\r\n// const initialState = { cart: { cartItems } };\r\n\r\nconst initStore = () => {\r\n  return createStore(reducer, bindMiddleware([thunkMiddleware]));\r\n};\r\n\r\nexport const wrapper = createWrapper(initStore);\r\n"]},"metadata":{},"sourceType":"module"}