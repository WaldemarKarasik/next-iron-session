{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport withSession from \"../../lib/session\";\nexport default withSession(async (req, res) => {\n  const user = req.session.get(\"user\");\n\n  if (user) {\n    // in a real world application you might read the user id from the session and then do a database request\n    // to get more information on the user if needed\n    res.json(_objectSpread({\n      isLoggedIn: true\n    }, user));\n  } else {\n    res.json({\n      isLoggedIn: false\n    });\n  }\n});","map":{"version":3,"sources":["C:/Users/daniel/Documents/react/next-iron-session/pages/api/user.js"],"names":["withSession","req","res","user","session","get","json","isLoggedIn"],"mappings":";;;;;;AAAA,OAAOA,WAAP,MAAwB,mBAAxB;AAEA,eAAeA,WAAW,CAAC,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAC7C,QAAMC,IAAI,GAAGF,GAAG,CAACG,OAAJ,CAAYC,GAAZ,CAAgB,MAAhB,CAAb;;AAEA,MAAIF,IAAJ,EAAU;AACR;AACA;AACAD,IAAAA,GAAG,CAACI,IAAJ;AACEC,MAAAA,UAAU,EAAE;AADd,OAEKJ,IAFL;AAID,GAPD,MAOO;AACLD,IAAAA,GAAG,CAACI,IAAJ,CAAS;AACPC,MAAAA,UAAU,EAAE;AADL,KAAT;AAGD;AACF,CAfyB,CAA1B","sourcesContent":["import withSession from \"../../lib/session\";\r\n\r\nexport default withSession(async (req, res) => {\r\n  const user = req.session.get(\"user\");\r\n\r\n  if (user) {\r\n    // in a real world application you might read the user id from the session and then do a database request\r\n    // to get more information on the user if needed\r\n    res.json({\r\n      isLoggedIn: true,\r\n      ...user,\r\n    });\r\n  } else {\r\n    res.json({\r\n      isLoggedIn: false,\r\n    });\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}