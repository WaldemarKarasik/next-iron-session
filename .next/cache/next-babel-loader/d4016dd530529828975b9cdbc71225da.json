{"ast":null,"code":"import fetchJson from \"../../lib/fetchJson\";\nimport withSession from \"../../lib/session\";\nexport default withSession(async (req, res) => {\n  const {\n    username\n  } = await req.body;\n  const url = `https://api.github.com/users/${username}`;\n\n  try {\n    // we check that the user exists on GitHub and store some data in session\n    const {\n      login,\n      avatar_url: avatarUrl\n    } = await fetchJson(url);\n    const user = {\n      isLoggedIn: true,\n      login,\n      avatarUrl\n    };\n    req.session.set(\"user\", user);\n    await req.session.save();\n    res.json(user);\n  } catch (error) {\n    const {\n      response: fetchResponse\n    } = error;\n    res.status((fetchResponse === null || fetchResponse === void 0 ? void 0 : fetchResponse.status) || 500).json(error.data);\n  }\n});","map":{"version":3,"sources":["C:/Users/daniel/Documents/react/next-iron-session/pages/api/login.js"],"names":["fetchJson","withSession","req","res","username","body","url","login","avatar_url","avatarUrl","user","isLoggedIn","session","set","save","json","error","response","fetchResponse","status","data"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,qBAAtB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AAEA,eAAeA,WAAW,CAAC,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAC7C,QAAM;AAAEC,IAAAA;AAAF,MAAe,MAAMF,GAAG,CAACG,IAA/B;AACA,QAAMC,GAAG,GAAI,gCAA+BF,QAAS,EAArD;;AAEA,MAAI;AACF;AACA,UAAM;AAAEG,MAAAA,KAAF;AAASC,MAAAA,UAAU,EAAEC;AAArB,QAAmC,MAAMT,SAAS,CAACM,GAAD,CAAxD;AACA,UAAMI,IAAI,GAAG;AAAEC,MAAAA,UAAU,EAAE,IAAd;AAAoBJ,MAAAA,KAApB;AAA2BE,MAAAA;AAA3B,KAAb;AACAP,IAAAA,GAAG,CAACU,OAAJ,CAAYC,GAAZ,CAAgB,MAAhB,EAAwBH,IAAxB;AACA,UAAMR,GAAG,CAACU,OAAJ,CAAYE,IAAZ,EAAN;AACAX,IAAAA,GAAG,CAACY,IAAJ,CAASL,IAAT;AACD,GAPD,CAOE,OAAOM,KAAP,EAAc;AACd,UAAM;AAAEC,MAAAA,QAAQ,EAAEC;AAAZ,QAA8BF,KAApC;AACAb,IAAAA,GAAG,CAACgB,MAAJ,CAAW,CAAAD,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAEC,MAAf,KAAyB,GAApC,EAAyCJ,IAAzC,CAA8CC,KAAK,CAACI,IAApD;AACD;AACF,CAfyB,CAA1B","sourcesContent":["import fetchJson from \"../../lib/fetchJson\";\r\nimport withSession from \"../../lib/session\";\r\n\r\nexport default withSession(async (req, res) => {\r\n  const { username } = await req.body;\r\n  const url = `https://api.github.com/users/${username}`;\r\n\r\n  try {\r\n    // we check that the user exists on GitHub and store some data in session\r\n    const { login, avatar_url: avatarUrl } = await fetchJson(url);\r\n    const user = { isLoggedIn: true, login, avatarUrl };\r\n    req.session.set(\"user\", user);\r\n    await req.session.save();\r\n    res.json(user);\r\n  } catch (error) {\r\n    const { response: fetchResponse } = error;\r\n    res.status(fetchResponse?.status || 500).json(error.data);\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}