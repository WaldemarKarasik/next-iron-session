{"ast":null,"code":"import withSession from \"../../lib/session\";\n\nconst mongoose = require(\"mongoose\");\n\nconst ProductSchema = require(\"../../db/schemas/ProductSchema\");\n\nmongoose.connect(\"mongodb+srv://komsomolradio:irkytsk87@cluster0.melez.gcp.mongodb.net/vercel-amazemo?retryWrites=true&w=majority\", {\n  useNewUrlParser: true,\n  useUnifiedTopology: true,\n  useFindAndModify: false\n});\nlet Product;\n\ntry {\n  // Trying to get the existing model to avoid OverwriteModelError\n  Product = mongoose.model(\"Product\", ProductSchema);\n} catch {\n  Product = mongoose.model(\"Product\");\n}\n\nexport default withSession(async (req, res) => {\n  const {\n    id\n  } = req.query; // console.log(Product);\n\n  const product = await Product.findOne({\n    _id: id\n  }).lean();\n  res.json(product);\n});","map":{"version":3,"sources":["C:/Users/daniel/Documents/react/next-iron-session/pages/api/products.ts"],"names":["withSession","mongoose","require","ProductSchema","connect","useNewUrlParser","useUnifiedTopology","useFindAndModify","Product","model","req","res","id","query","product","findOne","_id","lean","json"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,mBAAxB;;AAEA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAMC,aAAa,GAAGD,OAAO,CAAC,gCAAD,CAA7B;;AAEAD,QAAQ,CAACG,OAAT,CACE,iHADF,EAEE;AACEC,EAAAA,eAAe,EAAE,IADnB;AAEEC,EAAAA,kBAAkB,EAAE,IAFtB;AAGEC,EAAAA,gBAAgB,EAAE;AAHpB,CAFF;AASA,IAAIC,OAAJ;;AAEA,IAAI;AACF;AAEAA,EAAAA,OAAO,GAAGP,QAAQ,CAACQ,KAAT,CAAe,SAAf,EAA0BN,aAA1B,CAAV;AACD,CAJD,CAIE,MAAM;AACNK,EAAAA,OAAO,GAAGP,QAAQ,CAACQ,KAAT,CAAe,SAAf,CAAV;AACD;;AAED,eAAeT,WAAW,CAAC,OAAOU,GAAP,EAAYC,GAAZ,KAAoB;AAC7C,QAAM;AAAEC,IAAAA;AAAF,MAASF,GAAG,CAACG,KAAnB,CAD6C,CAE7C;;AACA,QAAMC,OAAO,GAAG,MAAMN,OAAO,CAACO,OAAR,CAAgB;AAAEC,IAAAA,GAAG,EAAEJ;AAAP,GAAhB,EAA6BK,IAA7B,EAAtB;AACAN,EAAAA,GAAG,CAACO,IAAJ,CAASJ,OAAT;AACD,CALyB,CAA1B","sourcesContent":["import withSession from \"../../lib/session\";\r\n\r\nconst mongoose = require(\"mongoose\");\r\nconst ProductSchema = require(\"../../db/schemas/ProductSchema\");\r\n\r\nmongoose.connect(\r\n  \"mongodb+srv://komsomolradio:irkytsk87@cluster0.melez.gcp.mongodb.net/vercel-amazemo?retryWrites=true&w=majority\",\r\n  {\r\n    useNewUrlParser: true,\r\n    useUnifiedTopology: true,\r\n    useFindAndModify: false,\r\n  }\r\n);\r\n\r\nlet Product;\r\n\r\ntry {\r\n  // Trying to get the existing model to avoid OverwriteModelError\r\n\r\n  Product = mongoose.model(\"Product\", ProductSchema);\r\n} catch {\r\n  Product = mongoose.model(\"Product\");\r\n}\r\n\r\nexport default withSession(async (req, res) => {\r\n  const { id } = req.query;\r\n  // console.log(Product);\r\n  const product = await Product.findOne({ _id: id }).lean();\r\n  res.json(product);\r\n});\r\n"]},"metadata":{},"sourceType":"module"}